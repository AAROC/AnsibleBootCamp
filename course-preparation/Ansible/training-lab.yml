---
# Ansible playbook to prepare the course machines ... to execute Ansible.
# Before you run this, make sure that the hosts can be managed.
# run this once-off:
# ansible all -i inventory.ini -m raw '[apt-get,yum] install python2.7 python-simplejson'

# This task doesn't have the benefit of retrieved facts, so you can't do any
# kind of host look up. You have to just know what kind of host you have
- hosts: all
  name: Low-down and dirty
  gather_facts: false
  tasks:
  - name: Pick up sensitive vars
    include_vars:
      file: "group_vars/passwords-{{ site_name }}.yml"

  - name: Announce the setup
    local_action:
      module: slack
      domain: "{{slack_domain}}"
      token: "{{ slack_token }}"
      msg: "Running training-lab setup for {{ inventory_hostname }} at {{ site_name }} :worried: "
      channel: "#devops"
      username: "Ansible on {{ inventory_hostname }}"
      link_names: 1
      parse: 'full'
    when: chat_service = 'slack'
    tags: 
      - slack

  - name: Low down dirty setup
    become: true
    raw: "apt-get -y install {{ item }}"
    with_items: "{{ managed_prerequisites }}"

  - name: Announce the outcome
    slack:
      domain: "{{ slack_domain }}"
      token: "{{ slack_token }}"
      msg: "Running training-lab setup for {{ inventory_hostname }} at {{ site_name }} :ok_hand: "
      channel: "#devops"
      username: "Ansible on {{ inventory_hostname }}"
      link_names: 1
      parse: 'full'
    when: chat_service = 'slack'
    tags:
    - slack

- hosts: training-lab
  name: Deploy Ansible onto the lab
  tasks:
  - name: Pick up sensitive vars
    include_vars:
      file: "group_vars/passwords-{{ site_name }}.yml"
  - name: Announce the Config play
    slack:
      domain: ubuntunet.slack.com
      token: "{{ slack_token }}"
      msg: "Running training-lab configuration on {{ inventory_hostname }} at {{ site_name }} :worried: "
      channel: "#devops"
      username: "Ansible on {{ inventory_hostname }}"
      link_names: 1
      parse: 'full'
    when: chat_service = 'slack'
    tags: 
      - slack
  - name: Install some basic stuff
    become: true
    package:
      name: "{{ item }}"
      state: present
    with_items: "{{ prerequisites[ansible_os_family]}}"

  - name: Install Ansible
    become: true
    pip:
      name: ansible
      state: present

  - name: Announce the Config play outcome
    slack:
      domain: "{{ slack_domain}}"
      token: "{{ slack_token }}"
      msg: "{{ inventory_hostname }} at {{ site_name }} now knows kung-fu :neo:"
      channel: "#devops"
      username: "Ansible on {{ inventory_hostname }}"
      link_names: 1
      parse: 'full'
    when: chat_service = 'slack'
    tags: 
      - slack

# This is a single loop over participants - should be done in a block
- name: Setup the users
  hosts: all
  tasks:
    - name: Add the participant
      user:
        name: "{{ item.username }}"
        comment: "User added for {{ site_name }} DevOps bootcamp"
        state: present
        createhome: true
        generate_ssh_key: true
      with_fileglob: "group_vars/participants-{{ site_name }}/*"

    - name: Ensure that the participant ssh key on Github is in authorized keys
      authorized_key:
        exclusive: no
        manage_dir: yes
        user: "{{ item.username }}"
        key: "https://github.com/{{ item.github }}.keys"
        state: present
      with_fileglob: "group_vars/participants-{{site-name}}/*"

# assert that the preferred package is in the prerequisites ?
    - name: Assert that the preferred editor is in prerequisites
      assert:
        that: "{{ item.git.core.package[ansible_os_family ]}} in prerequisites[ansible_os_family]"

    # - name: Ensure that the preferred editor is available
    #   package:
    #     name: "{{ item.git.core.package[ansible_os_family] }}"
    #     state: present
    #   with_items: "{{ participants }}"

    - name: Git config for the users
      git_config:
        name: core.editor
        value: "{{ item.git.core.editor}}"
        scope: global
    - name: Announce the Config play outcome
      slack:
        domain: "{{ slack_domain}}"
        token: "{{ slack_token }}"
        msg: "All the base of {{ inventory_hostname }} at {{ site_name }}  belong to :neo:"
        channel: "#devops"
        username: "Ansible on {{ inventory_hostname }}"
        link_names: 1
        parse: 'full'
      when: chat_service = 'slack'
      tags: 
        - slack
